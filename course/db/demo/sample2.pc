#ifdef RCSID
static char *RCSid = 
   "$Header: sample2.pc 1041300.1 93/05/05 16:00:21 jboyce Generic<base> $ sample2.pc ";
#endif /* RCSID */

/* Copyright (c) 1990 by Oracle Corporation */
 
/* NAME
     sample2.pc
   FUNCTION
     Oracle C Precompiler sample program
   RETURNS
 
   NOTES
 
   MODIFIED
    tssmith    03/03/93 - Fixing typedef and  TYPE statements
    sfaris     12/06/91 - Touch ups 
    Osborne    12/21/90 - Replacing with new version
*/
/*******************************************************************
Sample Program 2:  Cursor Operations

This program logs on to ORACLE, declares and opens a cursor,
fetches the names, salaries, and commissions of all salespeople,
displays the results, then closes the cursor.
*******************************************************************/

#include <stdio.h>

typedef char asciz[20];

EXEC SQL BEGIN DECLARE SECTION;

   /* User-defined type for null-terminated strings */
    EXEC SQL TYPE asciz IS STRING(20) REFERENCE;
    asciz     username;
    asciz     password;
    asciz     emp_name;

    float     salary;
    float     commission;

EXEC SQL END DECLARE SECTION;

EXEC SQL INCLUDE sqlca;

void sqlerror();               /* handles unrecoverable errors */

main()
{

    /* Log on to ORACLE. */

    strcpy(username, "SCOTT");
    strcpy(password, "TIGER");

    EXEC SQL WHENEVER SQLERROR DO sqlerror();

    EXEC SQL CONNECT :username IDENTIFIED BY :password;
    printf("\nConnected to ORACLE as user: %s\n", username);

    EXEC SQL DECLARE salespeople CURSOR FOR
	SELECT ENAME, SAL, COMM
	    FROM EMP
	    WHERE JOB LIKE 'SALES%';

    EXEC SQL OPEN salespeople;

    printf("\nSalesperson   Salary   Commission\n");
    printf("-----------   ------   ----------\n");

    /* Loop, fetching all salesperson's statistics */

    for ( ; ; )
    {
        EXEC SQL WHENEVER NOT FOUND DO break;

        EXEC SQL FETCH salespeople INTO :emp_name, :salary, :commission;

        printf("%-11s%9.2f%13.2f\n", emp_name, salary, commission);
    }

    EXEC SQL CLOSE salespeople;

    printf("\nHave a good day.\n");

    EXEC SQL COMMIT WORK RELEASE;
    exit(0);

}

void sqlerror()
{
    EXEC SQL WHENEVER SQLERROR CONTINUE;

    printf("\nORACLE error detected:\n");
    printf("\n% .70s \n", sqlca.sqlerrm.sqlerrmc);

    EXEC SQL ROLLBACK WORK RELEASE;
    exit(1);

}
